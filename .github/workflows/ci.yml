name: CI

on:
  push:
    branches:
    - master
    tags:
      - '*'
  pull_request:
    branches:
    - master

jobs:
  build:

    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v1
    - name: Update system
      run: sudo apt update -y
    - name: Install libev
      run: sudo apt install -y libev4 libev-dev
    - name: Install gcc-9
      run: sudo apt install -y gcc-9
    - name: Install systemd
      run: sudo apt install -y libsystemd-dev
    - name: Install rst2man
      run: sudo apt install -y python-docutils
    - name: Update alternatives
      run: sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 60
    - name: mkdir
      run: mkdir build
      working-directory: /home/runner/work/pgagroal/pgagroal/
    - name: cmake
      run: cmake -DCMAKE_BUILD_TYPE=Release ..
      working-directory: /home/runner/work/pgagroal/pgagroal/build/
    - name: make
      run: make
      working-directory: /home/runner/work/pgagroal/pgagroal/build/
    - name: Build project # This would actually build your project, using zip for an example artifact
      run: |
        zip --junk-paths my-artifact pgagroal
      working-directory: /home/runner/work/pgagroal/pgagroal/build/src/
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./my-artifact.zip
        asset_name: my-artifact.zip
        asset_content_type: application/zip
